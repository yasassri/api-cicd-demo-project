swagger: "2.0"
info:
  description: |
    This is a RESTFul API for Pizza Shack online pizza delivery store.
  version: 1.0.0
  title: PizzaShackAPI
  contact:
    name: John Doe
    url: http://www.pizzashack.com
    email: architecture@pizzashack.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
schemes:
 - https
consumes:
 - application/json
produces:
 - application/json
security:
 -
  default: []
paths:
  /order:
    post:
      description: Create a new Order
      parameters:
       -
        in: body
        name: body
        description: Order object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        "201":
          description: Created. Successful response with the newly created object as entity inthe body. Location header contains URL of newly created entity.
          headers:
            Location:
              type: string
              description: The URL of the newly created resource.
            Content-Type:
              type: string
              description: The content type of the body.
          schema:
            $ref: '#/definitions/Order'
        "400":
          description: Bad Request. Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type. The entity of the request was in a not supported format.
          schema:
            $ref: '#/definitions/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /menu:
    get:
      description: Return a list of available menu items
      parameters: []
      responses:
        "200":
          description: OK. List of APIs is returned.
          headers: {}
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        "304":
          description: Not Modified. Empty body because the client has already the latest version of the requested resource.
        "406":
          description: Not Acceptable. The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /order/{orderId}:
    get:
      description: Get details of an Order
      parameters:
       -
        name: orderId
        in: path
        description: Order Id
        required: true
        type: string
        format: string
      responses:
        "200":
          description: OK Requested Order will be returned
          headers: {}
          schema:
            $ref: '#/definitions/Order'
        "304":
          description: Not Modified. Empty body because the client has already the latest version of the requested resource.
        "404":
          description: Not Found. Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'
        "406":
          description: Not Acceptable. The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      description: Update an existing Order
      parameters:
       -
        name: orderId
        in: path
        description: Order Id
        required: true
        type: string
        format: string
       -
        in: body
        name: body
        description: Order object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        "200":
          description: OK. Successful response with updated Order
          headers:
            Location:
              type: string
              description: The URL of the newly created resource.
            Content-Type:
              type: string
              description: The content type of the body.
          schema:
            $ref: '#/definitions/Order'
        "400":
          description: Bad Request. Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found. The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        "412":
          description: Precondition Failed. The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      description: Delete an existing Order
      parameters:
       -
        name: orderId
        in: path
        description: Order Id
        required: true
        type: string
        format: string
      responses:
        "200":
          description: OK. Resource successfully deleted.
        "404":
          description: Not Found. Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        "412":
          description: Precondition Failed. The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
securityDefinitions:
  default:
    type: oauth2
    authorizationUrl: https://test.com
    flow: implicit
definitions:
  ErrorListItem:
    required:
     - code
     - message
    properties:
      message:
        type: string
        description: Description about individual errors occurred
      code:
        type: integer
        format: int64
    title: Description of individual errors that may have occurred during a request.
  MenuItem:
    required:
     - name
    properties:
      price:
        type: string
      description:
        type: string
      name:
        type: string
      image:
        type: string
    title: Pizza menu Item
  Order:
    required:
     - orderId
    properties:
      customerName:
        type: string
      delivered:
        type: boolean
      address:
        type: string
      pizzaType:
        type: string
      creditCardNumber:
        type: string
      quantity:
        type: number
      orderId:
        type: string
    title: Pizza Order
  Error:
    required:
     - code
     - message
    properties:
      message:
        type: string
        description: Error message.
      error:
        type: array
        description: If there are more than one error list them out. Ex. list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'
      description:
        type: string
        description: A detail description about the error message.
      code:
        type: integer
        format: int64
      moreInfo:
        type: string
        description: Preferably an url with more details about the error.
    title: Error object returned with 4XX HTTP status
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
   - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
   - authorization
   - Access-Control-Allow-Origin
   - Content-Type
   - SOAPAction
   - apikey
   - testKey
  accessControlAllowMethods:
   - GET
   - PUT
   - POST
   - DELETE
   - PATCH
   - OPTIONS
x-wso2-production-endpoints:
  urls:
   - https://localhost:9443/am/sample/pizzashack/v1/api/
  type: http
x-wso2-sandbox-endpoints:
  urls:
   - https://localhost:9443/am/sample/pizzashack/v1/api/
  type: http
x-wso2-basePath: /pizzashack/1.0.0
x-wso2-transports:
 - http
 - https
x-wso2-application-security:
  security-types:
   - oauth2
  optional: false
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
